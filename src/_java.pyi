from typing import Any, Callable

from java_api import FakeJavaObject, FakeJavaMethod, _JavaAttributeNotFoundType, FakeJavaClass


def find_class(name: str) -> int | None: ...

def remove_class(class_id: int) -> None: ...

def find_class_attribute(
    owner_name: str,
    owner_id: int,
    name: str,
    is_static: bool
) -> FakeJavaMethod | FakeJavaClass | int | _JavaAttributeNotFoundType: ...

def invoke_static_method(method_id: int, args: tuple[Any, ...]) -> Any: ...

def invoke_instance_method(object_id: int, method_id: int, args: tuple[Any, ...]) -> Any: ...

def get_static_field(field_id: int) -> Any: ...

def get_instance_field(object_id: int, field_id: int) -> Any: ...

def set_static_field(field_id: int, value: Any) -> None: ...

def set_instance_field(object_id: int, field_id: int, value: Any) -> Any: ...

def remove_method(method_id: int) -> None: ...

def remove_field(field_id: int) -> None: ...

def reflect_class_object(class_id: int) -> FakeJavaObject: ...

def remove_object(object_id: int) -> None: ...

def to_string(object_id: int) -> str: ...

def hash_code(object_id: int) -> int: ...

def identity_string(object_id: int) -> str: ...

def identity_hash(object_id: int) -> int: ...

def unreflect_class(object_id: int) -> FakeJavaClass: ...

def make_lambda(class_id: int, action: Callable[..., Any]) -> FakeJavaObject: ...
